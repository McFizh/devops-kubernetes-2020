apiVersion: v1
kind: Secret
metadata:
  name: pgsql-pwd
  namespace: project-ns
data:
  POSTGRES_PASSWORD: c2FsYXNhbmExMjM0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-claim
  namespace: project-ns
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pgsql-ss
  namespace: project-ns
spec:
  serviceName: pgsql
  replicas: 1
  selector:
    matchLabels:
      app: pgapp
  template:
    metadata:
      labels:
        app: pgapp
    spec:
      containers:
        - name: postgres
          image: postgres:12
          resources:
            limits:
              cpu: "100m"
              memory: "80Mi"
          ports:
            - name: pgsql
              containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgsql-pwd
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
              subPath: postgres
  volumeClaimTemplates:
    - metadata:
        name: pgdata
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: project-ns
  name: p3e03-backend-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: p3e03-backend
  template:
    metadata:
      labels:
        app: p3e03-backend
    spec:
      volumes:
        - name: shared
          persistentVolumeClaim:
              claimName: app-claim
      containers:
        - name: p3e03-back-cont
          image: BACKEND/IMAGE
          imagePullPolicy: Always
          resources:
            limits:
              cpu: "50m"
              memory: "50Mi"
          env:
            - name: POSTGRES_HOST
              value: pgsql-svc
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgsql-pwd
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: shared
              mountPath: /shared
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: project-ns
  name: p3e03-frontend-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: p3e03-frontend
  template:
    metadata:
      labels:
        app: p3e03-frontend
    spec:
      containers:
        - name: p3e03-front-cont
          image: FRONTEND/IMAGE
          resources:
            limits:
              cpu: "50m"
              memory: "50Mi"
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  namespace: project-ns
  name: p3cron
spec:
  schedule: "*/15 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: p3e03-cron-cont
            image: CRON/IMAGE
            env:
              - name: POSTGRES_HOST
                value: pgsql-svc
              - name: POSTGRES_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: pgsql-pwd
                    key: POSTGRES_PASSWORD
          restartPolicy: OnFailure
